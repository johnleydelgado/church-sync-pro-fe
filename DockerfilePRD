# Use a Node 16 base image
FROM --platform=linux/amd64 node:16-slim AS base

FROM base AS deps
# Set the working directory to /app inside the container
WORKDIR /app
# Copy app files
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN \
  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
  elif [ -f package-lock.json ]; then npm ci --legacy-peer-deps; \
  elif [ -f pnpm-lock.yaml ]; then yarn global add pnpm && pnpm i; \
  else echo "Lockfile not found." && exit 1; \
  fi

FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN npm run build

FROM base AS runner
WORKDIR /app
# Copy the build directory and built files
COPY --from=builder /app/build ./build
# Copy package.json to install 'serve' or any required packages
COPY package.json ./
# Install 'serve' or any required packages
RUN npm install serve

EXPOSE 3000
ENV PORT 3000

CMD [ "npx", "serve", "-s", "build" ]
